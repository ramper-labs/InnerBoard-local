name: Build and install on OS matrix

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Upgrade pip and install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel build

      - name: Install dependencies (to warm cache)
        run: |
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: Build sdist and wheel
        run: |
          python -m build

      - name: Show built artifacts
        run: |
          ls -lah dist

      - name: Install project from wheel
        run: |
          python -m pip install --force-reinstall dist/*.whl

      - name: Verify import works (wheel)
        run: |
          python -c "import app, app.cli; print('Imported OK')"

      - name: Verify CLI responds to --help (wheel)
        run: |
          innerboard --help

      - name: Reinstall from source (editable)
        run: |
          python -m pip install -e .

      - name: Verify CLI responds to --help (editable)
        run: |
          innerboard --help

